meta
{
    title: "Phone number fixups";
    version: "1,1_2024-08-15";
    description: "Fixes very common formatting issues with phone= in the United States";
    author: "watmildon";
    link: "https://github.com/watmildon/josm-validator-rules/blob/main/rules/PhoneNumber-ITU-T-Formatter.validator.mapcss";
    baselanguage: "en";
    min-josm-version: 14481;
}

/*

[out:json][timeout:300];
{{geocodeArea:"United States of America"}}->.a;
(
  // 2134567890
  nwr[phone~"^[2-9][0-9]{9}$"](area.a);
  // 213-456-7890
  nwr[phone~"^[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$"](area.a);
  // 213 456-7890
  nwr[phone~"^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$"](area.a);
  // 213 456 7890
  nwr[phone~"^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$"](area.a);
  // 213-456 7890
  nwr[phone~"^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$"](area.a);
  // (213) 456-7890
  nwr[phone~"^\([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$"](area.a);
  // (213) 456 7890
  nwr[phone~"^\([2-9][0-9]{2}\) [0-9]{3} [0-9]{4}$"](area.a);
  // +1-213-4567890
  nwr[phone~"^\+1-[2-9][0-9]{2}-[0-9]{7}$"](area.a);
  // Correct format but has spaces where hypens should be. 2 queries to avoid matching on correctly formatted tags
  nwr[phone~"^\+1[ \-][2-9][0-9]{2}[ \-][0-9]{3} [0-9]{4}$"](area.a);
  nwr[phone~"^\+1 [2-9][0-9]{2}[ \-][0-9]{3}[ \-][0-9]{4}$"](area.a);
  // +1 2134567890
  nwr[phone~"^\+1 [2-9][0-9]{9}$"](area.a);
  // +12134567890
  nwr[phone~"^\+1[2-9][0-9]{9}$"](area.a);
  // +1 213 4567890
  nwr[phone~"^\+1 [2-9][0-9]{2} [2-9][0-9]{6}$"](area.a);
  // 12134567890
  nwr[phone~"^1[2-9][0-9]{9}$"](area.a);
  // +1.213.456.7890
  nwr[phone~"^\+1\.[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$"](area.a);
  // +1 (213) 456-7890
  nwr[phone~"^\+1 \([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$"](area.a);
  // 1-213-456-7890
  nwr[phone~"^1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$"](area.a);
  // +1213-456-7890
  nwr[phone~"^\+1[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$"](area.a);
  // (213)456-7890
  nwr[phone~"^\([2-9][0-9]{2}\)[0-9]{3}-[0-9]{4}$"](area.a);
  // 213.456.7890
  nwr[phone~"^[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$"](area.a);
  // +1 213-456-7890
  nwr[phone~"^\+ 1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$"](area.a);
);
out body;
>;
out skel qt;

*/

*["phone"]["phone"!~/^\+1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertMatch: "way \"phone\"=+1-123-456-7890";
    assertMatch: "way \"phone\"=+1 12345678900";
    assertMatch: "way \"phone\"=+1 123-456-7890";
    assertMatch: "way \"phone\"=4567890";
    assertNoMatch: "way \"phone\"=+1-213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    group: tr("phone= is incorrectly formatted or contains multiple phone numbers, review after all other fixups have been applied");
}

*["phone"]["phone"="911"] {
    assertMatch: "way \"phone\"=911";
    throwError: tr("{0}", "{0.value}");
    group: tr("Only use object-specific emergency numbers");
}

*["phone"]["phone"=~/[A-Za-z]/] {
    assertNoMatch: "way \"phone\"=+1-213-456-7890";
    assertMatch: "way \"phone\"=+1-800-COLLECT";
    throwWarning: tr("{0}", "{0.value}");
    fixAdd: concat("phone:mnemonic=", tag("phone"));
    fixAdd: concat("phone=",replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(upper(tag("phone")), "A", "2"), "B", "2"), "C", "2"), "D", "3"), "E", "3"), "F", "3"), "G", "4"), "H", "4"), "I", "4"), "J", "5"), "K", "5"), "L", "5"), "M", "6"), "N", "6"), "O", "6"), "P", "7"), "Q", "7"), "R", "7"), "S", "7"), "T", "8"), "U", "8"), "V", "8"), "W", "9"), "X", "9"), "Y", "9"), "Z", "9"));
    group: tr("phone= contains alphabetic characters. May need to be moved to phone:mnemonic.");
}

*["phone"]["phone"=~/^[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"phone\"=1234567890";
    assertNoMatch: "way \"phone\"=12345678900";
    assertNoMatch: "way \"phone\"=123-456-7890";
    assertNoMatch: "way \"phone\"=4567890";
    assertMatch: "way \"phone\"=2134567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),0,3),"-",substring(tag("phone"),3,6),"-",substring(tag("phone"),6,10));
    group: tr("Safe: phone= is in format NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=123-456-7890";
    assertNoMatch: "way \"phone\"=123-456-78900";
    assertNoMatch: "way \"phone\"=123-456-7890";
    assertNoMatch: "way \"phone\"=456-7890";
    assertMatch: "way \"phone\"=213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", tag("phone"));
    group: tr("Safe: phone= is in format NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=123 456-7890";
    assertNoMatch: "way \"phone\"=123 456-78900";
    assertNoMatch: "way \"phone\"=123 456-7890";
    assertNoMatch: "way \"phone\"=456-7890";
    assertMatch: "way \"phone\"=213 456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),0,3),"-",substring(tag("phone"),4,12));
    group: tr("Safe: phone= is in format NNN NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^[2-9][0-9]{2} [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=123 456 78900";
    assertNoMatch: "way \"phone\"=123-456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=213 456 7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", replace(tag("phone")," ","-"));
    group: tr("Safe: phone= is in format NNN NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^[2-9][0-9]{2}-[0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=123-456 7890";
    assertNoMatch: "way \"phone\"=123-456 78900";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=213-456 7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),0,3),"-",substring(tag("phone"),4,12));
    group: tr("Safe: phone= is in format NNN-NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=(123) 456-7890";
    assertNoMatch: "way \"phone\"=(123) 456 7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=(213) 456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),1,4),"-",substring(tag("phone"),6,14));
    group: tr("Safe: phone= is in format (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\([2-9][0-9]{2}\) [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=(123) 456 7890";
    assertNoMatch: "way \"phone\"=(123) 456 7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=(213) 456 7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),1,4),"-",substring(tag("phone"),6,9),"-",substring(tag("phone"),10,14));
    group: tr("Safe: phone= is in format (NNN) NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1-[2-9][0-9]{2}-[0-9]{7}$/] {
    assertNoMatch: "way \"phone\"=+1-123 4567890";
    assertNoMatch: "way \"phone\"=+1-123 456 7890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1-213-4567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=", substring(tag("phone"),0,10),"-",substring(tag("phone"),10,14));
    group: tr("Safe: phone= is in format +1-NNN-NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1[ \\-][2-9][0-9]{2}[ \\-][0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1-123-456 7890";
    assertNoMatch: "way \"phone\"=+1-123 456 7890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1-213 456 7890";
    assertMatch: "way \"phone\"=+1-213-456 7890";
    assertMatch: "way \"phone\"=+1 213-456 7890";
    assertMatch: "way \"phone\"=+1 213 456 7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=", replace(tag(phone), " ", "-"));
    group: tr("Safe: phone= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1 [2-9][0-9]{2}[ \\-][0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1-123-456 7890";
    assertNoMatch: "way \"phone\"=+1-123 456 7890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1 213 456-7890";
    assertMatch: "way \"phone\"=+1 213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=", replace(tag(phone), " ", "-"));
    group: tr("Safe: phone= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1 [2-9][0-9]{9}$/] {
    assertNoMatch: "way \"phone\"=+1 1234567890";
    assertNoMatch: "way \"phone\"=+1-1234567890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1 2134567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),3,6),"-",substring(tag("phone"),6,9),"-",substring(tag("phone"),9,13));
    group: "Safe: phone= is in format +1 NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["phone"]["phone"=~/^\+1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"phone\"=+11234567890";
    assertNoMatch: "way \"phone\"=+1-1234567890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+12134567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),2,5),"-",substring(tag("phone"),5,8),"-",substring(tag("phone"),8,12));
    group: "Safe: phone= is in format +1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["phone"]["phone"=~/^\+1 [2-9][0-9]{2} [2-9][0-9]{6}$/] {
    assertNoMatch: "way \"phone\"=+1 123 4567890";
    assertNoMatch: "way \"phone\"=+1-123 4567890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1 213 4567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),3,6),"-",substring(tag("phone"),7,10),"-",substring(tag("phone"),10,14));
    group: tr("Safe: phone= is in format +1 NNN NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"phone\"=11234567890";
    assertNoMatch: "way \"phone\"=1-1234567890";
    assertNoMatch: "way \"phone\"=1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=12134567890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),1,4),"-",substring(tag("phone"),4,7),"-",substring(tag("phone"),7,11));
    group: tr("Safe: phone= is in format 1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1\.[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1.123.456.7890";
    assertNoMatch: "way \"phone\"=+1.123 456 7890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1.213.456.7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=", replace(tag(phone), ".", "-"));
    group: tr("Safe: phone= is in format +1.NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1 \([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1 (123) 456 7890";
    assertNoMatch: "way \"phone\"=(123) 456 7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1 (213) 456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),4,7),"-",substring(tag("phone"),9,17));
    group: tr("Safe: phone= is in format +1 (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=1-123-456-7890";
    assertNoMatch: "way \"phone\"=123-456-7890";
    assertNoMatch: "way \"phone\"=1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=1-213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+", tag("phone"));
    group: tr("Safe: phone= is in format 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\+1[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1123-456-7890";
    assertNoMatch: "way \"phone\"=+123-456-7890";
    assertNoMatch: "way \"phone\"=+1 123 456 7890";
    assertNoMatch: "way \"phone\"=456 7890";
    assertMatch: "way \"phone\"=+1213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),2));
    group: tr("Safe: phone= is in format +1NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"]["phone"=~/^\([2-9][0-9]{2}\)[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=(123)456-7890";
    assertNoMatch: "way \"phone\"=(123)456 7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=4567890";
    assertMatch: "way \"phone\"=(213)456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", substring(tag("phone"),1,4),"-",substring(tag("phone"),5,13));
    group: tr("Safe: phone= is in format (NNN)NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"][phone=~/^[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=123.456.7890";
    assertNoMatch: "way \"phone\"=(123)456 7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=4567890";
    assertMatch: "way \"phone\"=213.456.7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1-", replace(tag("phone"),".","-"));
    group: tr("Safe: phone= is in format NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"][phone=~/^\+ 1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1 123-456-7890";
    assertNoMatch: "way \"phone\"=+1123-456-7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=4567890";
    assertMatch: "way \"phone\"=+ 1-213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+", substring(tag("phone"),2));
    group: tr("Safe: phone= is in format + 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["phone"][phone=~/^\+1 -[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"phone\"=+1 123-456-7890";
    assertNoMatch: "way \"phone\"=+1123-456-7890";
    assertNoMatch: "way \"phone\"=123 456 7890";
    assertNoMatch: "way \"phone\"=4567890";
    assertMatch: "way \"phone\"=+1 -213-456-7890";
    throwWarning: tr("phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("phone=+1", substring(tag("phone"),3));
    group: tr("Safe: phone= is in format +1 -NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

/* Fax fixups */
*["fax"]["fax"!~/^\+1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertMatch: "way \"fax\"=+1-123-456-7890";
    assertMatch: "way \"fax\"=+1 12345678900";
    assertMatch: "way \"fax\"=+1 123-456-7890";
    assertMatch: "way \"fax\"=4567890";
    assertNoMatch: "way \"fax\"=+1-213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    group: tr("fax= is incorrectly formatted or contains multiple fax numbers, review after all other fixups have been applied");
}


*["fax"]["fax"=~/[A-Za-z]/] {
    assertNoMatch: "way \"fax\"=+1-213-456-7890";
    assertMatch: "way \"fax\"=+1-800-COLLECT";
    throwWarning: tr("{0}", "{0.value}");
    fixAdd: concat("fax:mnemonic=", tag("fax"));
    fixAdd: concat("fax=",replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(upper(tag("fax")), "A", "2"), "B", "2"), "C", "2"), "D", "3"), "E", "3"), "F", "3"), "G", "4"), "H", "4"), "I", "4"), "J", "5"), "K", "5"), "L", "5"), "M", "6"), "N", "6"), "O", "6"), "P", "7"), "Q", "7"), "R", "7"), "S", "7"), "T", "8"), "U", "8"), "V", "8"), "W", "9"), "X", "9"), "Y", "9"), "Z", "9"));
    group: tr("fax= contains alphabetic characters. May need to be moved to fax:mnemonic.");
}

*["fax"]["fax"=~/^[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"fax\"=1234567890";
    assertNoMatch: "way \"fax\"=12345678900";
    assertNoMatch: "way \"fax\"=123-456-7890";
    assertNoMatch: "way \"fax\"=4567890";
    assertMatch: "way \"fax\"=2134567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),0,3),"-",substring(tag("fax"),3,6),"-",substring(tag("fax"),6,10));
    group: tr("Safe: fax= is in format NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=123-456-7890";
    assertNoMatch: "way \"fax\"=123-456-78900";
    assertNoMatch: "way \"fax\"=123-456-7890";
    assertNoMatch: "way \"fax\"=456-7890";
    assertMatch: "way \"fax\"=213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", tag("fax"));
    group: tr("Safe: fax= is in format NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=123 456-7890";
    assertNoMatch: "way \"fax\"=123 456-78900";
    assertNoMatch: "way \"fax\"=123 456-7890";
    assertNoMatch: "way \"fax\"=456-7890";
    assertMatch: "way \"fax\"=213 456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),0,3),"-",substring(tag("fax"),4,12));
    group: tr("Safe: fax= is in format NNN NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^[2-9][0-9]{2} [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=123 456 78900";
    assertNoMatch: "way \"fax\"=123-456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=213 456 7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", replace(tag("fax")," ","-"));
    group: tr("Safe: fax= is in format NNN NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^[2-9][0-9]{2}-[0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=123-456 7890";
    assertNoMatch: "way \"fax\"=123-456 78900";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=213-456 7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),0,3),"-",substring(tag("fax"),4,12));
    group: tr("Safe: fax= is in format NNN-NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=(123) 456-7890";
    assertNoMatch: "way \"fax\"=(123) 456 7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=(213) 456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),1,4),"-",substring(tag("fax"),6,14));
    group: tr("Safe: fax= is in format (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\([2-9][0-9]{2}\) [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=(123) 456 7890";
    assertNoMatch: "way \"fax\"=(123) 456 7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=(213) 456 7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),1,4),"-",substring(tag("fax"),6,9),"-",substring(tag("fax"),10,14));
    group: tr("Safe: fax= is in format (NNN) NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1-[2-9][0-9]{2}-[0-9]{7}$/] {
    assertNoMatch: "way \"fax\"=+1-123 4567890";
    assertNoMatch: "way \"fax\"=+1-123 456 7890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1-213-4567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=", substring(tag("fax"),0,10),"-",substring(tag("fax"),10,14));
    group: tr("Safe: fax= is in format +1-NNN-NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1[ \\-][2-9][0-9]{2}[ \\-][0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1-123-456 7890";
    assertNoMatch: "way \"fax\"=+1-123 456 7890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1-213 456 7890";
    assertMatch: "way \"fax\"=+1-213-456 7890";
    assertMatch: "way \"fax\"=+1 213-456 7890";
    assertMatch: "way \"fax\"=+1 213 456 7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=", replace(tag(fax), " ", "-"));
    group: tr("Safe: fax= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1 [2-9][0-9]{2}[ \\-][0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1-123-456 7890";
    assertNoMatch: "way \"fax\"=+1-123 456 7890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1 213 456-7890";
    assertMatch: "way \"fax\"=+1 213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=", replace(tag(fax), " ", "-"));
    group: tr("Safe: fax= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1 [2-9][0-9]{9}$/] {
    assertNoMatch: "way \"fax\"=+1 1234567890";
    assertNoMatch: "way \"fax\"=+1-1234567890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1 2134567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),3,6),"-",substring(tag("fax"),6,9),"-",substring(tag("fax"),9,13));
    group: "Safe: fax= is in format +1 NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["fax"]["fax"=~/^\+1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"fax\"=+11234567890";
    assertNoMatch: "way \"fax\"=+1-1234567890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+12134567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),2,5),"-",substring(tag("fax"),5,8),"-",substring(tag("fax"),8,12));
    group: "Safe: fax= is in format +1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["fax"]["fax"=~/^\+1 [2-9][0-9]{2} [2-9][0-9]{6}$/] {
    assertNoMatch: "way \"fax\"=+1 123 4567890";
    assertNoMatch: "way \"fax\"=+1-123 4567890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1 213 4567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),3,6),"-",substring(tag("fax"),7,10),"-",substring(tag("fax"),10,14));
    group: tr("Safe: fax= is in format +1 NNN NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"fax\"=11234567890";
    assertNoMatch: "way \"fax\"=1-1234567890";
    assertNoMatch: "way \"fax\"=1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=12134567890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),1,4),"-",substring(tag("fax"),4,7),"-",substring(tag("fax"),7,11));
    group: tr("Safe: fax= is in format 1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1\.[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1.123.456.7890";
    assertNoMatch: "way \"fax\"=+1.123 456 7890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1.213.456.7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=", replace(tag(fax), ".", "-"));
    group: tr("Safe: fax= is in format +1.NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1 \([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1 (123) 456 7890";
    assertNoMatch: "way \"fax\"=(123) 456 7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1 (213) 456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),4,7),"-",substring(tag("fax"),9,17));
    group: tr("Safe: fax= is in format +1 (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=1-123-456-7890";
    assertNoMatch: "way \"fax\"=123-456-7890";
    assertNoMatch: "way \"fax\"=1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=1-213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+", tag("fax"));
    group: tr("Safe: fax= is in format 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\+1[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1123-456-7890";
    assertNoMatch: "way \"fax\"=+123-456-7890";
    assertNoMatch: "way \"fax\"=+1 123 456 7890";
    assertNoMatch: "way \"fax\"=456 7890";
    assertMatch: "way \"fax\"=+1213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),2));
    group: tr("Safe: fax= is in format +1NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"]["fax"=~/^\([2-9][0-9]{2}\)[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=(123)456-7890";
    assertNoMatch: "way \"fax\"=(123)456 7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=4567890";
    assertMatch: "way \"fax\"=(213)456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", substring(tag("fax"),1,4),"-",substring(tag("fax"),5,13));
    group: tr("Safe: fax= is in format (NNN)NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"][fax=~/^[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=123.456.7890";
    assertNoMatch: "way \"fax\"=(123)456 7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=4567890";
    assertMatch: "way \"fax\"=213.456.7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1-", replace(tag("fax"),".","-"));
    group: tr("Safe: fax= is in format NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"][fax=~/^\+ 1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1 123-456-7890";
    assertNoMatch: "way \"fax\"=+1123-456-7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=4567890";
    assertMatch: "way \"fax\"=+ 1-213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+", substring(tag("fax"),2));
    group: tr("Safe: fax= is in format + 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["fax"][fax=~/^\+1 -[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"fax\"=+1 123-456-7890";
    assertNoMatch: "way \"fax\"=+1123-456-7890";
    assertNoMatch: "way \"fax\"=123 456 7890";
    assertNoMatch: "way \"fax\"=4567890";
    assertMatch: "way \"fax\"=+1 -213-456-7890";
    throwWarning: tr("fax={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("fax=+1", substring(tag("fax"),3));
    group: tr("Safe: fax= is in format +1 -NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

/* contact:phone fixups */

*["contact:phone"]["contact:phone"!~/^\+1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertMatch: "way \"contact:phone\"=+1-123-456-7890";
    assertMatch: "way \"contact:phone\"=+1 12345678900";
    assertMatch: "way \"contact:phone\"=+1 123-456-7890";
    assertMatch: "way \"contact:phone\"=4567890";
    assertNoMatch: "way \"contact:phone\"=+1-213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    group: tr("contact:phone= is incorrectly formatted or contains multiple contact:phone numbers, review after all other fixups have been applied");
}


*["contact:phone"]["contact:phone"=~/[A-Za-z]/] {
    assertNoMatch: "way \"contact:phone\"=+1-213-456-7890";
    assertMatch: "way \"contact:phone\"=+1-800-COLLECT";
    throwWarning: tr("{0}", "{0.value}");
    fixAdd: concat("contact:phone:mnemonic=", tag("contact:phone"));
    fixAdd: concat("contact:phone=",replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(upper(tag("contact:phone")), "A", "2"), "B", "2"), "C", "2"), "D", "3"), "E", "3"), "F", "3"), "G", "4"), "H", "4"), "I", "4"), "J", "5"), "K", "5"), "L", "5"), "M", "6"), "N", "6"), "O", "6"), "P", "7"), "Q", "7"), "R", "7"), "S", "7"), "T", "8"), "U", "8"), "V", "8"), "W", "9"), "X", "9"), "Y", "9"), "Z", "9"));
    group: tr("contact:phone= contains alphabetic characters. May need to be moved to contact:phone:mnemonic.");
}

*["contact:phone"]["contact:phone"=~/^[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"contact:phone\"=1234567890";
    assertNoMatch: "way \"contact:phone\"=12345678900";
    assertNoMatch: "way \"contact:phone\"=123-456-7890";
    assertNoMatch: "way \"contact:phone\"=4567890";
    assertMatch: "way \"contact:phone\"=2134567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),0,3),"-",substring(tag("contact:phone"),3,6),"-",substring(tag("contact:phone"),6,10));
    group: tr("Safe: contact:phone= is in format NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=123-456-7890";
    assertNoMatch: "way \"contact:phone\"=123-456-78900";
    assertNoMatch: "way \"contact:phone\"=123-456-7890";
    assertNoMatch: "way \"contact:phone\"=456-7890";
    assertMatch: "way \"contact:phone\"=213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", tag("contact:phone"));
    group: tr("Safe: contact:phone= is in format NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^[2-9][0-9]{2} [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=123 456-7890";
    assertNoMatch: "way \"contact:phone\"=123 456-78900";
    assertNoMatch: "way \"contact:phone\"=123 456-7890";
    assertNoMatch: "way \"contact:phone\"=456-7890";
    assertMatch: "way \"contact:phone\"=213 456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),0,3),"-",substring(tag("contact:phone"),4,12));
    group: tr("Safe: contact:phone= is in format NNN NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^[2-9][0-9]{2} [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 78900";
    assertNoMatch: "way \"contact:phone\"=123-456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=213 456 7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", replace(tag("contact:phone")," ","-"));
    group: tr("Safe: contact:phone= is in format NNN NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^[2-9][0-9]{2}-[0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=123-456 7890";
    assertNoMatch: "way \"contact:phone\"=123-456 78900";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=213-456 7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),0,3),"-",substring(tag("contact:phone"),4,12));
    group: tr("Safe: contact:phone= is in format NNN-NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=(123) 456-7890";
    assertNoMatch: "way \"contact:phone\"=(123) 456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=(213) 456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),1,4),"-",substring(tag("contact:phone"),6,14));
    group: tr("Safe: contact:phone= is in format (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\([2-9][0-9]{2}\) [0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=(123) 456 7890";
    assertNoMatch: "way \"contact:phone\"=(123) 456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=(213) 456 7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),1,4),"-",substring(tag("contact:phone"),6,9),"-",substring(tag("contact:phone"),10,14));
    group: tr("Safe: contact:phone= is in format (NNN) NNN NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1-[2-9][0-9]{2}-[0-9]{7}$/] {
    assertNoMatch: "way \"contact:phone\"=+1-123 4567890";
    assertNoMatch: "way \"contact:phone\"=+1-123 456 7890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1-213-4567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=", substring(tag("contact:phone"),0,10),"-",substring(tag("contact:phone"),10,14));
    group: tr("Safe: contact:phone= is in format +1-NNN-NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1[ \\-][2-9][0-9]{2}[ \\-][0-9]{3} [0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1-123-456 7890";
    assertNoMatch: "way \"contact:phone\"=+1-123 456 7890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1-213 456 7890";
    assertMatch: "way \"contact:phone\"=+1-213-456 7890";
    assertMatch: "way \"contact:phone\"=+1 213-456 7890";
    assertMatch: "way \"contact:phone\"=+1 213 456 7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=", replace(tag("contact:phone"), " ", "-"));
    group: tr("Safe: contact:phone= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1 [2-9][0-9]{2}[ \\-][0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1-123-456 7890";
    assertNoMatch: "way \"contact:phone\"=+1-123 456 7890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1 213 456-7890";
    assertMatch: "way \"contact:phone\"=+1 213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=", replace(tag("contact:phone"), " ", "-"));
    group: tr("Safe: contact:phone= formatting is missing dashes, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1 [2-9][0-9]{9}$/] {
    assertNoMatch: "way \"contact:phone\"=+1 1234567890";
    assertNoMatch: "way \"contact:phone\"=+1-1234567890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1 2134567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),3,6),"-",substring(tag("contact:phone"),6,9),"-",substring(tag("contact:phone"),9,13));
    group: "Safe: contact:phone= is in format +1 NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["contact:phone"]["contact:phone"=~/^\+1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"contact:phone\"=+11234567890";
    assertNoMatch: "way \"contact:phone\"=+1-1234567890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+12134567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),2,5),"-",substring(tag("contact:phone"),5,8),"-",substring(tag("contact:phone"),8,12));
    group: "Safe: contact:phone= is in format +1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN";
}

*["contact:phone"]["contact:phone"=~/^\+1 [2-9][0-9]{2} [2-9][0-9]{6}$/] {
    assertNoMatch: "way \"contact:phone\"=+1 123 4567890";
    assertNoMatch: "way \"contact:phone\"=+1-123 4567890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1 213 4567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),3,6),"-",substring(tag("contact:phone"),7,10),"-",substring(tag("contact:phone"),10,14));
    group: tr("Safe: contact:phone= is in format +1 NNN NNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^1[2-9][0-9]{9}$/] {
    assertNoMatch: "way \"contact:phone\"=11234567890";
    assertNoMatch: "way \"contact:phone\"=1-1234567890";
    assertNoMatch: "way \"contact:phone\"=1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=12134567890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),1,4),"-",substring(tag("contact:phone"),4,7),"-",substring(tag("contact:phone"),7,11));
    group: tr("Safe: contact:phone= is in format 1NNNNNNNNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1\.[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1.123.456.7890";
    assertNoMatch: "way \"contact:phone\"=+1.123 456 7890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1.213.456.7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=", replace(tag("contact:phone"), ".", "-"));
    group: tr("Safe: contact:phone= is in format +1.NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1 \([2-9][0-9]{2}\) [0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1 (123) 456 7890";
    assertNoMatch: "way \"contact:phone\"=(123) 456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1 (213) 456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),4,7),"-",substring(tag("contact:phone"),9,17));
    group: tr("Safe: contact:phone= is in format +1 (NNN) NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=1-123-456-7890";
    assertNoMatch: "way \"contact:phone\"=123-456-7890";
    assertNoMatch: "way \"contact:phone\"=1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=1-213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+", tag("contact:phone"));
    group: tr("Safe: contact:phone= is in format 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\+1[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1123-456-7890";
    assertNoMatch: "way \"contact:phone\"=+123-456-7890";
    assertNoMatch: "way \"contact:phone\"=+1 123 456 7890";
    assertNoMatch: "way \"contact:phone\"=456 7890";
    assertMatch: "way \"contact:phone\"=+1213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),2));
    group: tr("Safe: contact:phone= is in format +1NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"]["contact:phone"=~/^\([2-9][0-9]{2}\)[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=(123)456-7890";
    assertNoMatch: "way \"contact:phone\"=(123)456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=4567890";
    assertMatch: "way \"contact:phone\"=(213)456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", substring(tag("contact:phone"),1,4),"-",substring(tag("contact:phone"),5,13));
    group: tr("Safe: contact:phone= is in format (NNN)NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"][contact:phone=~/^[2-9][0-9]{2}\.[0-9]{3}\.[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=123.456.7890";
    assertNoMatch: "way \"contact:phone\"=(123)456 7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=4567890";
    assertMatch: "way \"contact:phone\"=213.456.7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1-", replace(tag("contact:phone"),".","-"));
    group: tr("Safe: contact:phone= is in format NNN.NNN.NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"][contact:phone=~/^\+ 1-[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1 123-456-7890";
    assertNoMatch: "way \"contact:phone\"=+1123-456-7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=4567890";
    assertMatch: "way \"contact:phone\"=+ 1-213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+", substring(tag("contact:phone"),2));
    group: tr("Safe: contact:phone= is in format + 1-NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}

*["contact:phone"][contact:phone=~/^\+1 -[2-9][0-9]{2}-[0-9]{3}-[0-9]{4}$/] {
    assertNoMatch: "way \"contact:phone\"=+1 123-456-7890";
    assertNoMatch: "way \"contact:phone\"=+1123-456-7890";
    assertNoMatch: "way \"contact:phone\"=123 456 7890";
    assertNoMatch: "way \"contact:phone\"=4567890";
    assertMatch: "way \"contact:phone\"=+1 -213-456-7890";
    throwWarning: tr("contact:phone={0}, should be corrected to +1-NNN-NNN-NNNN", "{0.value}");
    fixAdd: concat("contact:phone=+1", substring(tag("contact:phone"),2));
    group: tr("Safe: contact:phone= is in format +1 -NNN-NNN-NNNN, should be corrected to +1-NNN-NNN-NNNN");
}