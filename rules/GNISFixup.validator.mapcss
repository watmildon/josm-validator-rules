meta
{
    title: "GNIS Tag Fixup";
    version: "0,1_2023-08-16";
    description: "Removes leading zeros from gnid:feature_id and synonyms";
    author: "watmildon";
    link: "https://github.com/watmildon/josm-validator-rules/blob/main/rules/GNISFixup.validator.mapcss";
    baselanguage: "en";
    min-josm-version: 14481;
}

/*
USA CLEAN AS OF 2023-09-02
*/

/*
[out:json][timeout:300];
{{geocodeArea:"Oregon,United States of America"}}->.a;
(
  nwr["gnis:feature_id"~"^0.+"](area.a);
);
out body;
>;
out skel qt;
*/


*["gnis:feature_id"]["gnis:feature_id"=~/^0[^0].*/] {
    assertNoMatch: "way \"gnis:feature_id\"=001";
    assertMatch: "way \"gnis:feature_id\"=01";
    assertNoMatch: "way \"gnis:feature_id\"=1";
    throwWarning: tr("Modified gnis:feature_id with leading zero. ID fields should not have leading zeros");
    fixAdd: concat("gnis:feature_id=", substring(tag("gnis:feature_id"), 1, length(tag("gnis:feature_id"))));
}

*["gnis:feature_id"]["gnis:feature_id"=~/^00[^0].*/] {
    assertNoMatch: "way \"gnis:feature_id\"=0001";
    assertMatch: "way \"gnis:feature_id\"=001";
    assertNoMatch: "way \"gnis:feature_id\"=01";
    throwWarning: tr("Modified gnis:feature_id with leading zero. ID fields should not have leading zeros");
    fixAdd: concat("gnis:feature_id=", substring(tag("gnis:feature_id"), 2, length(tag("gnis:feature_id"))));
}

*["gnis:feature_id"]["gnis:feature_id"=~/^000[^0].*/] {
    assertNoMatch: "way \"gnis:feature_id\"=00001";
    assertMatch: "way \"gnis:feature_id\"=0001";
    assertNoMatch: "way \"gnis:feature_id\"=001";
    throwWarning: tr("Modified gnis:feature_id with leading zero. ID fields should not have leading zeros");
    fixAdd: concat("gnis:feature_id=", substring(tag("gnis:feature_id"), 3, length(tag("gnis:feature_id"))));
}

*["gnis:feature_id"]["gnis:feature_id"=~/^0000[^0].*/] {
    assertNoMatch: "way \"gnis:feature_id\"=000001";
    assertMatch: "way \"gnis:feature_id\"=00001";
    assertNoMatch: "way \"gnis:feature_id\"=0001";
    throwWarning: tr("Modified gnis:feature_id with leading zero. ID fields should not have leading zeros");
    fixAdd: concat("gnis:feature_id=", substring(tag("gnis:feature_id"), 4, length(tag("gnis:feature_id"))));
}

*["gnis:feature_id"]["gnis:feature_id"=~/^00000[^0].*/] {
    assertNoMatch: "way \"gnis:feature_id\"=0000001";
    assertMatch: "way \"gnis:feature_id\"=000001";
    assertNoMatch: "way \"gnis:feature_id\"=00001";
    throwWarning: tr("Modified gnis:feature_id with leading zero. ID fields should not have leading zeros");
    fixAdd: concat("gnis:feature_id=", substring(tag("gnis:feature_id"), 5, length(tag("gnis:feature_id"))));
}